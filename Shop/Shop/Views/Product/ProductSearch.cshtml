@{
    ViewBag.Title = "ProductSearch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model List<Shop.Models.HangHoaViewModel>


<style>
    .breadcrumb-item a {
        color: #6c757d;
        text-decoration: none;
    }

        .breadcrumb-item a:hover {
            color: #1aba1a;
        }
</style>

<div class="container p-3 bg-white my-2 rounded-3">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb small text-muted m-0">
            <li class="breadcrumb-item"><a href="/">Trang Chủ</a></li>
            <li class="breadcrumb-item"><a href="/pages">Tìm kiếm</a></li>
            <li class="breadcrumb-item"><a href="/pages">Sản phẩm yêu thích</a></li>
        </ol>
    </nav>
</div>
<div class="container mb-3 p-0 bg-white p-4">
    <div class="py-2 rounded-3  my-2">
        <h5 class="fw-bold text-uppercase border-start border-4 border-success ps-3 mb-4">Sắp xếp theo:</h5>
        <div class="d-flex  align-items-center ">
            <div>
                <button class="btn btn-outline-secondary me-2 sort-btn active" id="sort-related">
                    Liên quan
                </button>
                <button class="btn btn-outline-secondary me-2 sort-btn" id="sort-price-asc">
                    <i class="bi bi-arrow-down-circle me-2"></i> Giá thấp
                </button>
                <button class="btn btn-outline-secondary sort-btn" id="sort-price-desc">
                    <i class="bi bi-arrow-up-circle me-2"></i> Giá cao
                </button>

            </div>
        </div>
    </div>
    <h5 class="text-center mb-3">
        Tìm thấy @Model.Count sản phẩm cho từ khoá '@ViewBag.Keyword'
    </h5>
    <div style="height: 2px; background-color: #ccc; width: 100%; margin-bottom: 1rem;"></div>

    <style>
        .card-hover:hover {
            box-shadow: 0 0.5rem 1rem rgba(0,0,0,0.15);
            transform: translateY(-2px);
            transition: all 0.3s ease;
        }
    </style>
    <div class="row g-3">
        <!-- Bên trái: Danh sách sản phẩm chiếm 70% -->
        <div class="col-lg-9">
            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-2">
                @foreach (var product in Model)
                {
                    <div class="col">
                        <a href="@Url.Action("AddRecentProduct", "Product", new { maHangHoa = product.MaHangHoa, maBienThe = product.MaBienThe })" class="text-decoration-none text-dark">
                            <div class="card h-100 shadow border-0 card-hover" data-price="@product.GiaKhuyenMai">
                                <div class="position-relative">
                                    <img src="~/assets/Image/Product/@product.HinhAnh"
                                         alt="@product.TenHangHoa"
                                         class="card-img-top p-2"
                                         style="height: 180px; object-fit: contain;" />
                                    @{
                                        double giaGoc = (double)product.GiaBan;
                                        double giaKM = (double)product.GiaKhuyenMai;
                                        int phanTramGiam = giaGoc > 0 ? (int)Math.Round((giaGoc - giaKM) / giaGoc * 100) : 0;
                                    }
                                    @if (phanTramGiam > 0)
                                    {
                                        <span class="position-absolute top-0 start-0 badge bg-danger m-2">
                                            @phanTramGiam% OFF
                                        </span>
                                    }
                                </div>

                                <div class="card-body d-flex flex-column">
                                    <h6 class="card-title text-truncate" title="@product.TenHangHoa">@product.TenHangHoa</h6>
                                    <p class="text-muted small mb-2" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 200px;">@product.MoTa</p>
                                    <div class="mb-2">
                                        <!-- Hiển thị sao dựa trên đánh giá trung bình -->
                                        <div class="text-warning">
                                            @{
                                                int danhGia = (int)Math.Floor(product.DanhGiaTrungBinh);
                                                int saoRong = 5 - danhGia;
                                            }

                                            @for (int i = 0; i < danhGia; i++)
                                            {
                                                <i class="bi bi-star-fill"></i>
                                            }
                                            @for (int i = 0; i < saoRong; i++)
                                            {
                                                <i class="bi bi-star" style="opacity: 0.3;"></i>
                                            }

                                            <span class="text-muted small ms-1">@product.DanhGiaTrungBinh.ToString("0.0") đánh giá</span>
                                        </div>

                                        <!-- Hiển thị giá tiền -->
                                        <div class="mt-1">
                                            <span class="fw-bold text-danger me-2">
                                                @(((double)product.GiaKhuyenMai).ToString("N0")) ₫
                                            </span>
                                            <del class="text-muted small">
                                                @(((double)product.GiaBan).ToString("N0")) ₫
                                            </del>
                                        </div>
                                    </div>


                                    <div class="mt-auto">
                                        <div class="d-flex align-items-center text-success mb-2">
                                            <i class="bi bi-check-circle-fill me-1"></i> Còn hàng
                                        </div>
                                        <div class="badge bg-success w-100">Miễn phí vận chuyển</div>
                                    </div>
                                </div>
                            </div>
                        </a>
                    </div>
                }
            </div>
        </div>

        <!-- Bên phải: Chiếm 30%, bạn có thể thêm nội dung khác vào đây -->
        <div class="col-lg-3">
            <div class="bg-white p-3 rounded shadow-sm" style="max-height:520px;">
                <h5 class="mb-3">
                    <i class="bi bi-file-earmark-text-fill text-danger me-2"></i>
                    Bài viết liên quan
                </h5>
            

                <div class="" id="related-articles">
                   
                </div>

                <script>
                    fetch('/News/PartialNews_2')
                        .then(response => response.text())
                        .then(html => {
                            document.getElementById('related-articles').innerHTML = html;
                        });
                </script>

            </div>
        </div>

    </div>
</div>
@Html.Action("RecentlyViewedPartial", "Product")
@section Scripts {
    <script>
        const container = document.querySelector(".row-cols-1");
        const originalOrder = Array.from(container.children);
        const buttons = document.querySelectorAll(".sort-btn");

        function setActive(button) {
            buttons.forEach(btn => btn.classList.remove("active"));
            button.classList.add("active");
        }

        function sortProducts(order, button) {
            setActive(button);

            const cards = Array.from(container.children);
            cards.sort((a, b) => {
                const priceA = parseFloat(a.querySelector(".card").dataset.price);
                const priceB = parseFloat(b.querySelector(".card").dataset.price);
                return order === 'asc' ? priceA - priceB : priceB - priceA;
            });

            cards.forEach(card => container.appendChild(card));
        }

        document.getElementById("sort-price-asc").addEventListener("click", function () {
            sortProducts("asc", this);
        });

        document.getElementById("sort-price-desc").addEventListener("click", function () {
            sortProducts("desc", this);
        });

        document.getElementById("sort-related").addEventListener("click", function () {
            setActive(this);
            originalOrder.forEach(card => container.appendChild(card));
        });
    </script>
}
