@{
    ViewBag.Title = "ProductDetail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using Shop.Models
@model ProductDetailPageView



<link rel="stylesheet" href="~/assets/CSS/Product/Product_Detail.css" />
<div class="container p-3 bg-white my-3 rounded-3">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb small text-muted m-0">
            <li class="breadcrumb-item"><a href="/">Trang Chủ</a></li>
            <li class="breadcrumb-item"><a href="/pages">Pages</a></li>
            <li class="breadcrumb-item"><a href="/pages">Danh Mục Sản Phẩm</a></li>
            <li class="breadcrumb-item"><a href="/pages"> @Html.Raw(Model.Product.TenDanhMuc)</a></li>
            <li class="breadcrumb-item active text-secondary" aria-current="<p></p>age">@Model.Product.TenHangHoa</li>

        </ol>
    </nav>
</div>
<div class="container py-5 bg-white my-3 rounded-3">
    <div class="row g-2">
        <!-- Product Images -->
        <div class="col-lg-4">
            <div class="position-relative mb-3">
                <div class="main-img-wrapper text-center mb-3">
                    <img id="mainImage" src="~/assets/Image/Product/@Model.SelectedBienThe.UrlAnh.FirstOrDefault()" class="img-fluid main-image" />
                </div>
            </div>
            <div class="d-flex justify-content-center gap-2">
                @foreach (var url in Model.SelectedBienThe.UrlAnh)
                {
                    <div class="p-2 d-flex align-items-center" style="width:80px;height:80px;cursor:pointer;">
                        <img src="@Url.Content("~/assets/Image/Product/" + url)" alt="Thumb" class="img-fluid thumb-image" data-full="@Url.Content("~/assets/Image/Product/" + url)" />
                    </div>
                }
            </div>
            <style>
                .main-image.crop-side {
                    object-fit: cover;
                    object-position: center;
                    width: 100%;
                    height: auto;
                    aspect-ratio: 6 / 6; /* hoặc 3 / 2 tuỳ bố cục */
                }

                .main-image {
                    transition: opacity 0.5s ease-in-out, transform 0.3s ease-in-out;
                    opacity: 1;
                }

                    .main-image.fade-out {
                        opacity: 0;
                    }
            </style>
        </div>


        <!-- Product Details -->
        <div class="col-lg-5">
            <div class="mb-3">
                <div class="star-rating">
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= Model.Product.DanhGiaTrungBinh)
                        {
                            <i class="bi bi-star-fill"></i>
                        }
                        else
                        {
                            <i class="bi bi-star" style="opacity: 0.3;"></i>
                        }
                    }
                    <span class="rating-count">@Model.Product.SoLuongDanhGia Đánh Giá</span>
                </div>
                <h3 class="fw-bold mt-2"> @Model.Product.TenHangHoa</h3>
            </div>


            <div class="mb-3">
                <h4 class="fw-bold">
                    <span class="text-danger">
                        @(((double)Model.SelectedBienThe.GiaKhuyenMai).ToString("N0")) ₫
                    </span>&nbsp;
                    <span class="text-muted text-decoration-line-through">
                        @(((double)Model.SelectedBienThe.GiaBan).ToString("N0")) ₫
                    </span>

                </h4>
            </div>

            @Html.Raw(Model.Product.MoTaDai)


            <div class="d-flex gap-3 mb-4">
                <span class="badge-freeship py-1 px-2 rounded-2 text-uppercase">Free Shipping</span>
                <span class="badge-gift  py-1 px-2 rounded-2 text-uppercase">Free Gift</span>
            </div>

            <div class="border-top border-bottom py-3 mb-3">
                <div class="mb-3">
                    <strong>Color:</strong> <span class="text-muted">@Model.SelectedBienThe.MauSac</span>
                    <style>
                        .variant-option.active {
                            border: 2px solid #0d6efd;
                            background-color: #e7f1ff;
                        }
                    </style>

                    <div class="d-flex gap-2 mt-2">
                        @foreach (var product in Model.ListBienThes)
                        {
                            var isSelected = product.MaBienThe == Model.SelectedBienThe.MaBienThe;
                            var activeClass = isSelected ? "selected-border bg-light" : "";

                            <a href="@Url.Action("ProductDetail", "Product", new { id = product.MaHangHoa, mabienthe = product.MaBienThe })"
                               class="variant-option border p-2 d-flex align-items-center gap-2 rounded-3 text-decoration-none text-dark @activeClass">
                                <div class="color-box bg-white">
                                    <img src="~/assets/Image/Product/@product.UrlAnh.FirstOrDefault()" alt="Thumb" class="img-fluid bg-white" />
                                </div>
                                <div>
                                    <div class="small fw-medium">@product.MauSac</div>
                                    <div class="small">@(((double)product.GiaKhuyenMai).ToString("N0")) ₫</div>
                                </div>
                            </a>
                        }


                    </div>
                </div>

                <div class="mb-3">
                    <strong>Memory Size:</strong>
                    <span class="text-muted">@Model.SelectedBienThe.DungLuong</span>
                    <div class="d-flex gap-2 mt-2">
                        @foreach (var bt in Model.ListBienThes.GroupBy(b => b.DungLuong).Select(g => g.First()))
                        {
                            var isActive = bt.DungLuong == Model.SelectedBienThe.DungLuong;
                            var btnClass = isActive ? "btn-success" : "btn-outline-secondary";

                            <a href="@Url.Action("ProductDetail", "Product", new { id = bt.MaHangHoa, mabienthe = bt.MaBienThe })"
                               class="btn @btnClass btn-sm rounded-3">
                                @bt.DungLuong
                            </a>
                        }
                    </div>
                </div>

            </div>

            <div class="bg-light p-4 rounded-3 d-flex align-items-start gap-3 mb-4">
                <img src="https://ui-themez.smartinnovates.net/items/swoo_html/inner_pages/assets/img/gift.png" alt="Gift" height="64" />
                <div>
                    <ul class="ps-3 mb-1">
                        <li>Mua <span class="text-danger fw-bold">01</span> điện thoại tặng kèm  <span class="fw-bold">ốp lưng cao cấp</span></li>
                        <li>Mua <span class="text-danger fw-bold">01</span> điện thoại tặng kèm <span class="fw-bold">kính cường lực kingkong </span></li>
                        <li>Bảo hành lên đến <span class="text-danger fw-bold">01</span> năm <span class="fw-bold">cho sản phẩm</span></li>
                        <li>Kèm <span class="text-danger fw-bold">01</span> củ sạc theo máy<span class="fw-bold"></span></li>
                    </ul>
                    <div class="small text-muted">Khuyến mãi kết thúc lúc: 21:00, 25/05/2024</div>
                </div>
            </div>



            <div class="mt-4 small text-muted">
                <div class="d-flex gap-4">
                    <div class="py-2">
                        <div><strong>Mã Hàng Hóa:</strong> <span class="text-dark"> @Model.Product.MaHangHoa</span></div>
                        <div><strong>Tên DM:</strong> <span class="text-dark"> @Html.Raw(Model.Product.TenDanhMuc)</span></div>
                        <div><strong>Thương Hiệu:</strong> <span class="text-colormain">@Model.Product.TenThuongHieu</span></div>
                    </div>
                    <img src="@Url.Action("QR", "Product", new { maHangHoa = "HH001", maBienThe = "BT001" })"
                         alt="QR sản phẩm"
                         width="80"
                         height="80" />
                </div>
              
                  


               
            </div>
        </div>

        <!-- TOTAL PRICE SECTION -->
        <div class="col-lg-3 ">
            <div class="bg-gray p-4 rounded-4">
                <div class="mb-4">
                    <div class="text-muted small">TỔNG TIỀN SẢN PHẨM:</div>
                    @{
                        var giaKhuyenMai = (double)@Model.SelectedBienThe.GiaKhuyenMai;
                    }
                    <h2 class="fw-bold">
                        <span id="total-price">@giaKhuyenMai.ToString("N0")</span> ₫
                    </h2>
                </div>
                <div class="d-flex align-items-center text-success mb-3">
                    @if (Model.SelectedBienThe.SoLuongTonKho > 0)
                    {
                        <div class="btn-success rounded-circle me-2 d-flex align-content-center" style="width: 20px; height: 20px;">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="white" width="20" height="20">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                            </svg>
                        </div>
                        <span>Còn hàng</span>
                    }
                    else
                    {
                        <div class="btn-danger rounded-circle me-2 d-flex align-content-center" style="width: 20px; height: 20px;">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="white" width="20" height="20">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </div>
                        <span class="text-danger">Hết hàng</span>
                    }
                </div>

                <div class="d-flex gap-3 mb-3 align-items-center justify-content-sm-between bg-white">
                    <button class="btn btn-outline-secondary" id="btn-decrease" @(Model.SelectedBienThe.SoLuongTonKho == 0 ? "disabled" : "")><i class="bi bi-dash"></i></button>
                    <span class="fs-5" id="quantity">1</span>
                    <button class="btn btn-outline-secondary" id="btn-increase" @(Model.SelectedBienThe.SoLuongTonKho == 0 ? "disabled" : "")><i class="bi bi-plus"></i></button>
                </div>

                <button class="btn btn-success w-100 mb-2 py-3" id="btnAddToCart" @(Model.SelectedBienThe.SoLuongTonKho == 0 ? "disabled" : "")> 
                    <i class="bi bi-cart-plus me-2"></i>
                    @(Model.SelectedBienThe.SoLuongTonKho == 0 ? "Hết hàng" : "Thêm vào giỏ hàng")
                </button>
                <button class="btn btn-warning w-100 mb-3 py-3">
                    Thanh toán với <img src="https://ui-themez.smartinnovates.net/items/swoo_html/inner_pages/assets/img/paypal.png" alt="PayPal" height="20" />
                </button>

                <div class="d-flex justify-content-between small mb-2 border-bottom pb-3">
                    <div class="stock-status">
                        <a href="#" class="text-decoration-none text-dark hover-shake add-to-favorite" data-mahanghoa="@Model.SelectedBienThe.MaHangHoa">
                            @if (ViewBag.DanhSachYeuThich.Contains(Model.SelectedBienThe.MaHangHoa))
                            {
                                <i class="fas fa-heart heart-icon glowing-heart" data-filled="true"></i>
                            }
                            else
                            {
                                <i class="far fa-heart heart-icon" data-filled="false"></i>
                            }
                            <span>Yêu thích</span>
                        </a>
                    </div>
                    <button class="btn  text-muted p-0"><i class="fa-solid fa-code-compare"></i> So sánh</button>
                </div>

                <div class="text-center fw-medium small">Đảm bảo thanh toán an toàn</div>

                <div class="pay-logos my-3">
                    <img src="https://ui-themez.smartinnovates.net/items/swoo_html/inner_pages/assets/img/pay.png" alt="" class="w-100">
                </div>
            </div>
            <div class="text-center bg-light my-3 p-4 rounded-4 shadow-sm">
                <button class="btn btn-dark w-100 mb-2" onclick="handleCallClick()">
                    Đặt hàng nhanh 24/7
                </button>
                <div class="fw-bold fs-4 mt-2">
                    <a href="tel:0334328540" id="callLink" class="text-decoration-none text-dark">
                        <i class="bi bi-telephone-fill me-2"></i> (03) 3432 85 40
                    </a>
                </div>
                <small class="text-muted d-block mt-1">
                    Click để gọi nếu bạn đang dùng điện thoại. Trên máy tính, hệ thống sẽ hỗ trợ sao chép số.
                </small>
            </div>




            <p class="color-000 mt-15"> <i class="fa-solid fa-truck-fast"></i> <span class="color-666"> Giao hàng từ </span> <strong> Hồ Chí Minh</strong> </p>
        </div>

    </div>
</div>


<div class="container p-3 bg-white rounded-3">
    <!-- Tabs Section -->
    <div class="">
        <ul class="nav nav-tabs" id="productTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active text-dark" id="desc-tab" data-bs-toggle="tab" data-bs-target="#description" type="button">MÔ TẢ</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link text-dark" id="compare-tab" data-bs-toggle="tab" data-bs-target="#comparison" type="button">SO SÁNH</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link text-dark" id="brand-tab" data-bs-toggle="tab" data-bs-target="#brand" type="button">GIỚI THIỆU THƯƠNG HIỆU</button>
            </li>
        </ul>
        <div class="tab-content p-4" id="productTabsContent">
            <!-- Tab 1: Mô tả -->
            <div class="tab-pane fade show active" id="description">

                <div class="d-flex">
                    <div class="col-lg-8">
                        <div class="content-wrapper" id="contentWrapper">
                            @Html.Raw(Model.Product.MoTaChiTiet)
                        </div>
                     
                    </div>

                    <div class="col-lg-4 ">
                        <div class="bg-white px-3 rounded shadow-sm " style="max-height:520px;">
                            <h3 class="mb-3">
                                <i class="bi bi-file-earmark-text-fill text-danger me-2"></i>
                                Tin tức liên quan
                            </h3>
                            <div class="list-group list-group-flush" id="related-articles">
                                <a href="#" class="d-flex mb-3 text-decoration-none">
                                    <img src="https://cdn-media.sforum.vn/storage/app/media/1image/iphone-12-pro-max-mau-nao-dat-nhat-thumbnail.jpg" alt="..." class="rounded" style="width: 70px; height: 70px; object-fit: cover;">
                                    <div class="ms-2 small text-dark">Xiaomi Mijia Wireless Floor Scrubber 4 Max ra mắt với...</div>
                                </a>
                                <a href="#" class="d-flex mb-3 text-decoration-none">
                                    <img src="https://cdn-media.sforum.vn/storage/app/media/minhty/beecube-x2-max-gen-5.jpg" alt="..." class="rounded" style="width: 70px; height: 70px; object-fit: cover;">
                                    <div class="ms-2 small text-dark">Xiaomi Box 5 và 5 Max ra mắt với HyperOS...</div>
                                </a>
                                <a href="#" class="d-flex mb-3 text-decoration-none">
                                    <img src="https://cdn-media.sforum.vn/storage/app/media/trannghia/trannghia/vivo-x200-ultra-vs-iphone-16-pro-max-cover.jpg" alt="..." class="rounded" style="width: 70px; height: 70px; object-fit: cover;">
                                    <div class="ms-2 small text-dark">Đánh giá HP OMEN MAX 16: Màn hình OLED đẹp...</div>
                                </a>
                                <a href="#" class="d-flex mb-3 text-decoration-none">
                                    <img src="https://cdn-media.sforum.vn/storage/app/media/trannghia/trannghia/vivo-x200-ultra-vs-iphone-16-pro-max-cover.jpg" alt="..." class="rounded" style="width: 70px; height: 70px; object-fit: cover;">
                                    <div class="ms-2 small text-dark">Đánh giá HP OMEN MAX 16: Màn hình OLED đẹp...</div>
                                </a>
                                <!-- Nút xem tất cả -->
                                <div class="text-center mt-2">
                                    <button class="btn btn-sm btn-outline-primary" type="button" data-bs-toggle="collapse" data-bs-target="#more-articles" aria-expanded="false" aria-controls="more-articles">
                                        Xem tất cả
                                    </button>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
               
            </div>
            <style>
                .content-wrapper {
                    max-height: 500px; /* Giới hạn chiều cao, có thể điều chỉnh */
                    overflow-y: auto; /* Bật thanh cuộn dọc khi nội dung vượt quá chiều cao */
                }
            </style>
            <!-- Tab 2: So sánh -->
            <div class="tab-pane fade" id="comparison">
                <div class="container py-2 border p-4 rounded-4 ">
                    <!-- Tabs -->
                    <ul class="nav nav-tabs mb-4" id="productTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#overview" type="button">Tổng quan</button>
                        </li>

                        <li class="nav-item" role="presentation">
                            <button id="specTabBtn" class="nav-link disabled" data-bs-toggle="tab" data-bs-target="#specifications" type="button" disabled>
                                Thông số kỹ thuật
                            </button>
                        </li>

                    </ul>

                    <div class="tab-content" id="productTabsContent">
                        <!-- Overview Tab -->
                        <div class="tab-pane fade show active" id="overview">
                            <div class="row g-4">
                                <!-- Product 1 -->

                                <div class="col-md-6">
                                    <div class="card h-100">
                                        <div class="position-relative">
                                            @if (Model.SelectedBienThe.GiaKhuyenMai < Model.SelectedBienThe.GiaBan)
                                            {
                                                var discount = (int)Math.Round(100 - (Model.SelectedBienThe.GiaKhuyenMai * 100.0 / Model.SelectedBienThe.GiaBan));
                                                <span class="badge bg-danger position-absolute top-0 start-0 m-2">Giảm @discount%</span>
                                            }
                                            <div class="stock-status position-absolute top-0 end-0 m-2 rounded-circle">
                                                <a href="#" class="text-decoration-none text-dark hover-shake add-to-favorite fs-6" data-mahanghoa="@Model.SelectedBienThe.MaHangHoa">
                                                    @if (ViewBag.DanhSachYeuThich.Contains(Model.SelectedBienThe.MaHangHoa))
                                                    {
                                                        <i class="fas fa-heart heart-icon glowing-heart fa-lg me-1" data-filled="true"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="far fa-heart heart-icon fa-lg me-1" data-filled="false"></i>
                                                    }

                                                </a>

                                            </div>

                                            <div class="w-100">
                                                <center><img style="width:300px; height:300px; " src="~/assets/Image/Product/@Model.SelectedBienThe.UrlAnh.FirstOrDefault()" class="card-img-top p-4" alt="@Model.Product.TenHangHoa" /></center>
                                            </div>
                                        </div>
                                        <div class="card-body">
                                            <h5 class="card-title">@Model.Product.TenHangHoa</h5>
                                            <div class="mb-2">
                                                <div class="star-rating">
                                                    @for (int i = 1; i <= 5; i++)
                                                    {
                                                        if (i <= Model.Product.DanhGiaTrungBinh)
                                                        {
                                                            <i class="bi bi-star-fill"></i>
                                                        }
                                                        else
                                                        {
                                                            <i class="bi bi-star" style="opacity: 0.3;"></i>
                                                        }
                                                    }
                                                    <span class="rating-count">@Model.Product.SoLuongDanhGia Đánh Giá</span>
                                                </div>
                                            </div>
                                            <p class="card-text text-muted">
                                                @Model.Product.MoTa
                                                @Html.Raw(Model.Product.MoTaDai)
                                            </p>

                                            <div class="justify-content-between align-items-center mb-3">
                                                @if (Model.SelectedBienThe.GiaKhuyenMai < Model.SelectedBienThe.GiaBan)
                                                {
                                                    <span class="fw-bold fs-4 text-danger"> @Model.SelectedBienThe.GiaKhuyenMai.ToString("N0") đ</span>
                                                    <span class="text-muted text-decoration-line-through">@Model.SelectedBienThe.GiaBan.ToString("N0") đ</span>
                                                }
                                                else
                                                {
                                                    <span class="fw-bold fs-4">@Model.SelectedBienThe.GiaBan.ToString("N0") đ</span>
                                                }

                                            </div>
                                            @*<div>
                                                <small class="text-muted fw-semibold">Màu sắc:</small>
                                                @foreach (var mau in product.DanhSachMauSac) // Giả sử bạn có list màu trong sản phẩm
                                                {
                                                    <span class="badge rounded-pill border">@mau</span>
                                                }
                                            </div>*@
                                        </div>
                                    </div>
                                </div>
                                <!-- Product 2 -->
                                <div id="selectedProductContainerSummary" class="col-md-6" style="display: none;">
                                    @foreach (var product in Model.RelatedProducts)
                                    {
                                        var bienThe = product.BienThes.FirstOrDefault(bt => bt.MaHangHoa == product.MaHangHoa);
                                        if (bienThe == null) { continue; };

                                        string id = "selected_" + product.MaHangHoa + "_" + bienThe.MaBienThe;
                                        <div class="selected-product" id="@id" style="display: none;">
                                            <div class="card h-100">
                                                <div class="position-relative">
                                                    <span class="badge bg-danger position-absolute top-0 start-0 m-2">
                                                        @{
                                                            var giaKM = bienThe.GiaKhuyenMai ?? 0;
                                                            var giaGoc = bienThe.GiaBan ?? 1; // tránh chia cho 0
                                                            var phanTramGiam = Math.Round((1 - giaKM / giaGoc) * 100);
                                                        }
                                                        <span class="badge bg-danger">Giảm @phanTramGiam%</span>


                                                    </span>
                                                    <button class="btn btn-light position-absolute top-0 end-0 m-2 rounded-circle">
                                                        <i class="bi bi-heart"></i>
                                                    </button>
                                                    <center><img style="width: 300px; height: 300px; " src="/assets/Image/Product/@product.HinhAnh" class="card-img-top p-4" alt="@product.TenHangHoa" /></center>
                                                </div>
                                                <div class="card-body">
                                                    <h5 class="card-title">@product.TenHangHoa</h5>
                                                    <div class="star-rating">
                                                        @for (int i = 1; i <= 5; i++)
                                                        {
                                                            if (i <= product.DanhGiaTrungBinh)
                                                            {
                                                                <i class="bi bi-star-fill"></i>
                                                            }
                                                            else
                                                            {
                                                                <i class="bi bi-star" style="opacity: 0.3;"></i>
                                                            }
                                                        }
                                                        <span class="rating-count">@product.SoLuongDanhGia Đánh Giá</span>
                                                    </div>
                                                    <p class="card-text text-muted">@product.MoTa</p>
                                                    @Html.Raw(product.MoTaDai)
                                                    <div class="d-flex align-items-center mb-3">
                                                        <span class="fw-bold fs-4 text-danger">@(((double)bienThe.GiaKhuyenMai).ToString("N0")) ₫</span>
                                                        <span class="text-muted text-decoration-line-through ms-2">@(((double)bienThe.GiaBan).ToString("N0")) ₫</span>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>

                                <div id="search" class="col-md-6">
                                    <!-- Ô tìm kiếm -->
                                    <div class="mb-3">
                                        <input type="text" class="form-control" id="searchInput" placeholder="Tìm sản phẩm liên quan..." onkeyup="filterProducts()" />
                                    </div>


                                    <!-- Danh sách sản phẩm -->
                                    <div id="relatedProductList" style="display: none; max-height: 400px; overflow-y: auto;">
                                        @foreach (var product in Model.RelatedProducts)
                                        {
                                            var bienThe = product.BienThes.FirstOrDefault(bt => bt.MaHangHoa == product.MaHangHoa);

                                            <div class="related-product" onclick="selectProduct('@product.MaHangHoa', '@bienThe.MaBienThe')">
                                                <div class="card ">
                                                    <div class="d-flex">
                                                        <img style="width:100px; height:100px" src="~/assets/Image/Product/@product.HinhAnh" class="card-img-top" alt="@product.TenHangHoa" />
                                                        <div class="card-body">
                                                            <h6 class="card-title">@product.TenHangHoa</h6>

                                                            <span class="fw-bold fs-6 text-danger"> @(((double)bienThe.GiaKhuyenMai).ToString("N0")) ₫</span>
                                                            <span class="text-muted text-decoration-line-through">@(((double)bienThe.GiaBan).ToString("N0")) ₫</span>
                                                            <p class="card-text">@product.MoTa</p>

                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <div id="noResults" class="text-muted text-center p-2" style="display: block;">
                                        Không tìm thấy sản phẩm phù hợp.
                                    </div>
                                </div>

                                <!-- Script lọc sản phẩm -->
                                <script>
                                    function filterProducts() {
                                        const input = document.getElementById("searchInput");
                                        const filter = input.value.toLowerCase().trim();
                                        const list = document.getElementById("relatedProductList");
                                        const products = list.querySelectorAll(".related-product");
                                        const noResults = document.getElementById("noResults");

                                        let matchCount = 0;

                                        // Nếu ô tìm kiếm trống
                                        if (filter === "") {
                                            products.forEach(p => p.style.display = "none");
                                            list.style.display = "block";  // vẫn cần hiển thị danh sách để hiện thông báo
                                            noResults.style.display = "block";
                                            return;
                                        }

                                        // Nếu có nội dung
                                        list.style.display = "block";

                                        products.forEach(function (product) {
                                            const title = product.querySelector(".card-title").textContent.toLowerCase();
                                            const isMatch = title.includes(filter);
                                            product.style.display = isMatch ? "" : "none";
                                            if (isMatch) matchCount++;
                                        });

                                        // Hiện hoặc ẩn thông báo "không có kết quả"
                                        noResults.style.display = matchCount === 0 ? "block" : "none";
                                    }
                                  
                                    function selectProduct(maHangHoa, maBienThe) {
                                        document.getElementById("search").style.display = "none";

                                        // Hiện container
                                        document.getElementById("selectedProductContainerSummary").style.display = "block";
                                        document.getElementById("selectedProductContainerDetail").style.display = "block";

                                        // Ẩn hết
                                        document.querySelectorAll(".selected-product-summary").forEach(p => p.style.display = "none");
                                        document.querySelectorAll(".selected-product-detail").forEach(p => p.style.display = "none");

                                        const selectedId = `selected_${maHangHoa}_${maBienThe}`;
                                        const selected = document.getElementById(selectedId);
                                        if (selected) selected.style.display = "block";

                                        const summaryId = "selected_summary_" + maHangHoa + "_" + maBienThe;
                                        const summary = document.getElementById(summaryId);
                                        if (summary) summary.style.display = "block";
                                        document.getElementById("specTabBtn").classList.remove("disabled");
                                        document.getElementById("specTabBtn").removeAttribute("disabled");

                                    }


                          

                                </script>

                            </div>
                        </div>

                   

                        <!-- Specifications Tab -->
                        <div class="tab-pane fade" id="specifications">
                            <div class="row g-4">
                                <!-- Product 1 specs -->
                                <div class="col-md-6">
                                    <div class="card h-100">
                                        <div class="card-body">

                                            <h5 class="card-title">@Model.Product.TenHangHoa</h5>
                                            <ul class="list-group list-group-flush mb-3">
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>Màu sắc</span><span>@Model.SelectedBienThe.MauSac</span>
                                                </li>
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>CPU</span><span>@Model.SelectedBienThe.CPU</span>
                                                </li>
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>RAM</span><span>@Model.SelectedBienThe.RAM</span>
                                                </li>
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>Dung lượng</span><span>@Model.SelectedBienThe.DungLuong</span>
                                                </li>
                                                <li class="list-group-item d-flex justify-content-between">
                                                    <span>Kích thước màn hình</span><span>@Model.SelectedBienThe.KichThuocManHinh</span>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                                <!-- Product 2 specs -->
                                <div id="selectedProductContainerDetail" class="col-md-6" style="display: none;">
                                    @foreach (var product in Model.RelatedProducts)
                                    {
                                        foreach (var bienThe in product.BienThes)
                                        {
                                            var summaryId = "selected_summary_" + product.MaHangHoa + "_" + bienThe.MaBienThe;
                                            <div id="@summaryId" class="selected-product" style="display: none;">
                                                <div class="card h-100">
                                                    <div class="card-body">
                                                        <h5 class="card-title">@product.TenHangHoa</h5>
                                                        <ul class="list-group list-group-flush mb-3">
                                                            <li class="list-group-item d-flex justify-content-between">
                                                                <span>Màu sắc</span><span>@bienThe.MauSac</span>
                                                            </li>
                                                            <li class="list-group-item d-flex justify-content-between">
                                                                <span>CPU</span><span>@bienThe.CPU</span>
                                                            </li>
                                                            <li class="list-group-item d-flex justify-content-between">
                                                                <span>RAM</span><span>@bienThe.RAM</span>
                                                            </li>
                                                            <li class="list-group-item d-flex justify-content-between">
                                                                <span>Dung lượng</span><span>@bienThe.DungLuong</span>
                                                            </li>
                                                            <li class="list-group-item d-flex justify-content-between">
                                                                <span>Kích thước màn hình</span><span>@bienThe.KichThuocManHinh</span>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>


                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Tab 3: Thương hiệu -->
            <div class="tab-pane fade" id="brand">
                @Html.Raw(Model.Product.MoTaThuongHieu)
            </div>
        </div>

    </div>
</div>


<div class="container p-0 my-3">
    <div style="background-color:white" class="swiper productSwiper p-4 rounded-4">
        <h3>Có thể bạn quan tâm</h3>
        <!-- Swiper Wrapper -->
        <div class="swiper-wrapper">
            @foreach (var product in Model.RelatedProducts)
            {
                <div class="swiper-slide">
                    <a href="@Url.Action("AddRecentProduct", "Product", new { maHangHoa = product.MaHangHoa, maBienThe = product.MaBienThe })" class="text-decoration-none text-dark">
                        <!-- Card sản phẩm BEST SELLER -->
                        <div class="product-card">
                            <div class="product-image-container">
                                <img src="~/assets/Image/Product/@product.HinhAnh" alt="@product.TenHangHoa" width="194" height="200">
                            </div>
                            @{
                                var bienThe = product.BienThes.FirstOrDefault(bt => bt.MaHangHoa == product.MaHangHoa);
                            }

                            @if (bienThe != null)
                            {
                                <div class="review-count">(@bienThe.SoLuongTonKho)</div>
                                <h5 class="product-name">@product.TenHangHoa</h5>
                                <p class="product-description">@product.MoTa</p>
                                <div class="star-rating">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= @product.DanhGiaTrungBinh)
                                        {
                                            <i class="bi bi-star-fill"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-star" style="opacity: 0.3;"></i>
                                        }
                                    }
                                    <span class="rating-count">@product.SoLuongDanhGia Ratings</span>
                                </div>

                                <div class="price-container">
                                    <span class="current-price"> @(((double)bienThe.GiaKhuyenMai).ToString("N0")) ₫</span>
                                    <span class="original-price text-muted text-decoration-line-through">  @(((double)bienThe.GiaBan).ToString("N0")) ₫</span>

                                    @{
                                        var goc = bienThe.GiaBan;
                                        var km = bienThe.GiaKhuyenMai;
                                        var discount = (goc > 0 && km > 0) ? 100 - (km * 100 / goc) : 0;
                                    }
                                </div>
                                if (discount > 0)
                                {
                                    <span class="discount text-danger">
                                        @(((double)discount).ToString("N0")) %
                                    </span>
                                }
                                <div class="free-shipping">FREE SHIPPING</div>
                                <div class="d-flex justify-content-between">
                                    @if (bienThe.SoLuongTonKho > 0)
                                    {
                                        <div class="stock-status">
                                            <i class="bi bi-check-circle-fill in-stock-icon"></i>
                                            <span>Còn hàng</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="stock-status text-danger">
                                            <i class="bi bi-x-circle-fill"></i>&nbsp;
                                            <span>Hết hàng</span>
                                        </div>
                                    }
                                    <style>
                                        .glowing-heart {
                                            color: red;
                                            text-shadow: 0 0 8px #ff6b6b, 0 0 12px #ff3d3d;
                                        }
                                    </style>
                                    <div class="stock-status">
                                        <a href="#" class="text-decoration-none text-dark hover-shake add-to-favorite" data-mahanghoa="@product.MaHangHoa">
                                            @if (ViewBag.DanhSachYeuThich.Contains(product.MaHangHoa))
                                            {
                                                <i class="fas fa-heart heart-icon glowing-heart" data-filled="true"></i>
                                            }
                                            else
                                            {
                                                <i class="far fa-heart heart-icon" data-filled="false"></i>
                                            }
                                            <span>Yêu thích</span>
                                        </a>
                                    </div>
                                </div>
                            }
                        </div>
                    </a>
                </div>
            }
        </div>

        <!-- Navigation buttons -->
        <div class="swiper-button-next"></div>
        <div class="swiper-button-prev"></div>
    </div>
</div>
<style>
    .swiper-button-next, .swiper-button-prev {
        color: #999; /* Màu sắc xám nhạt cho các nút */
        font-size: 18px; /* Giảm kích thước font của nút */
        width: 30px; /* Điều chỉnh chiều rộng của nút */
        height: 30px; /* Điều chỉnh chiều cao của nút */
    }

        .swiper-button-next::after, .swiper-button-prev::after {
            font-size: 18px; /* Kích thước của mũi tên */
        }

    .swiper-slide {
        display: flex;
        justify-content: center;
        align-items: center;
    }
</style>

@Html.Action("RecentlyViewedPartial", "Product")


<!-- Product Reviews -->
<div class="container py-4 rounded-3 bg-white p-4">
    <h2 class="h3 mb-4 fw-bold">Đánh giá sản phẩm</h2>
    <!-- Rating Summary -->
    <div class="row mb-5 px-4">

        <!-- Cột 25% -->
        <div class="col-12 col-md-3 mb-4 mb-md-0">
            <div class="bg-light p-4 rounded text-center mx-4 rounded-4">
                <div class="display-6 fw-bold mb-2">@Model.Product.DanhGiaTrungBinh.ToString("0.0")</div>
                <div class="small text-muted mb-3">of @Model.Product.SoLuongDanhGia reviews</div>
                <div class="d-flex mb-2 justify-content-center">
                    <div class="d-flex ">
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= Model.Product.DanhGiaTrungBinh)
                            {
                                <i class="bi bi-star-fill text-warning"></i>
                            }
                            else
                            {
                                <i class="bi bi-star" style="opacity: 0.3;"></i>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Cột 75% -->
        <div class="col-12 col-md-9">
            @{
                var tongDanhGia = Model.Product.ThongKeSoSao.Values.Sum();
                string[] nhanXet = new[] { "", "Tệ", "Không hài lòng", "Bình thường", "Tốt", "Tuyệt vời" };
            }

            @for (int sao = 5; sao >= 1; sao--)
            {
                var soLuong = Model.Product.ThongKeSoSao.ContainsKey(sao) ? Model.Product.ThongKeSoSao[sao] : 0;
                var phanTram = tongDanhGia > 0 ? (soLuong * 100 / tongDanhGia) : 0;
                <div class="mb-2">
                    <div class="d-flex justify-content-between">
                        <div>@nhanXet[sao]</div>
                        <div>@soLuong</div>
                    </div>
                    <div class="progress progress-sm">
                        <div class="progress-bar bg-warning" style="width: @phanTram%"></div>
                    </div>
                </div>
            }

        </div>
    </div>


    <div class="space-y-5" id="reviewsContainer">
        @for (int i = 0; i < Model.Product.DanhGiasChiTiet.Count; i++)
        {
            var danhgia = Model.Product.DanhGiasChiTiet[i];
            var hiddenClass = i >= 2 ? "d-none" : "";

            <div class="bg-white my-3 p-4 rounded-4 shadow review-item @hiddenClass">
                <div class="d-flex justify-content-between mb-3">
                    <div class="d-flex gap-3">
                        <img src="https://png.pngtree.com/png-clipart/20210915/ourlarge/pngtree-avatar-icon-abstract-user-login-icon-png-image_3917181.jpg" alt="User" class="rounded-circle" width="40" height="40">
                        <div>
                            <div class="fw-medium">@danhgia.HoTenKhachHang</div>
                            <div class="d-flex">
                                <div class="star-rating">
                                    @for (int star = 1; star <= 5; star++)
                                    {
                                        if (star <= danhgia.SoSao)
                                        {
                                            <i class="bi bi-star-fill text-warning"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-star" style="opacity: 0.3;"></i>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="small text-muted">@danhgia.NgayTao</div>
                </div>
                <p class="text-muted mb-3">@danhgia.BinhLuan</p>
                <div class="d-flex gap-2">
                    <img src="https://ui-themez.smartinnovates.net/items/swoo_html/inner_pages/assets/img/products/prod27.png" alt="Review image 1" class="rounded" width="80" height="80">
                    <img src="https://ui-themez.smartinnovates.net/items/swoo_html/inner_pages/assets/img/products/prod27.png" alt="Review image 2" class="rounded" width="80" height="80">
                </div>
            </div>
        }
    </div>

    <!-- View More Button -->
    @if (Model.Product.DanhGiasChiTiet.Count > 2)
    {
        <div class="text-center mt-4">
            <button class="btn btn-outline-success" id="viewMoreBtn">View More</button>
        </div>
    }

</div>
@*Banner*@
<section class="tc-banner-style3 my-2  slow" data-wow-delay="0.2s" style="visibility: visible; animation-delay: 0.2s; animation-name: fadeInUp;">
    <div class="banner-card text-center">
        <h6 class="d-block d-lg-inline-flex align-items-center fw-400 fsz-18 lh-5"> <img src="https://ui-themez.smartinnovates.net/items/swoo_html/home_tech/assets/img/star.png" alt="" class="icon-30 me-2"> Thành viên được  MIỄN PHÍ VẬN CHUYỂN không yêu cầu giá trị đơn hàng tối thiểu!. Áp dụng điều kiện <a href="#" class="fsz-14 text-decoration-underline ms-2 text-white"> Dùng thử miễn phí 30 ngày!" </a> </h6>
    </div>
</section>

<script>
    //1
    const swiperWrapper = document.getElementById('product-swiper-wrapper');
    const productTabs = document.getElementById('product-tabs');

    // Khởi tạo swiper với autoplay + transition mượt
    const productSwiper = new Swiper(".productSwiper", {
        slidesPerView: 2,
        spaceBetween: 20,
        loop: false,
        speed: 1000, // tốc độ chuyển slide (ms)
        autoplay: {
            delay: 3000, // tự chuyển mỗi 3 giây
            disableOnInteraction: false, // không dừng autoplay khi người dùng swipe
        },
        breakpoints: {
            576: { slidesPerView: 2 },
            768: { slidesPerView: 3 },
            992: { slidesPerView: 4 },
            1200: { slidesPerView: 5 }
        },
        navigation: {
            nextEl: ".swiper-button-next",
            prevEl: ".swiper-button-prev"
        }
    });
</script>
<script>
     const unitPrice = @giaKhuyenMai;
    document.addEventListener('DOMContentLoaded', function () {
        let quantity = 1;
        const quantityDisplay = document.getElementById('quantity');
        const btnIncrease = document.getElementById('btn-increase');
        const btnDecrease = document.getElementById('btn-decrease');

        btnIncrease.addEventListener('click', function () {
            quantity++;
            quantityDisplay.textContent = quantity;
        });

        btnDecrease.addEventListener('click', function () {
            if (quantity > 1) {
                quantity--;
                quantityDisplay.textContent = quantity;
            }
        });
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        let quantity = 1;
        const pricePerItem = unitPrice; // từ Razor
        const quantityDisplay = document.getElementById('quantity');
        const priceDisplay = document.getElementById('total-price');

        document.getElementById('btn-increase').addEventListener('click', () => {
            quantity++;
            updateDisplay();
        });

        document.getElementById('btn-decrease').addEventListener('click', () => {
            if (quantity > 1) {
                quantity--;
                updateDisplay();
            }
        });

        function updateDisplay() {
            quantityDisplay.textContent = quantity;
            priceDisplay.textContent = (quantity * pricePerItem).toLocaleString('vi-VN');
        }
    });
</script>
<script>
    document.getElementById("viewMoreBtn")?.addEventListener("click", function () {
        const hiddenItems = document.querySelectorAll(".review-item.d-none");
        hiddenItems.forEach(item => item.classList.remove("d-none"));
        this.style.display = "none"; // Ẩn nút sau khi bấm
    });
</script>

<script>
    // add ds yêu thích
    $(document).ready(function () {
        $('.add-to-favorite').on('click', function (e) {
            e.preventDefault();
            const $icon = $(this).find('.heart-icon');
            const maHangHoa = $(this).data('mahanghoa');

            $.ajax({
                url: '/Product/AddWishList',
                type: 'POST',
                data: { maHangHoa: maHangHoa },
                success: function (res) {
                    if (res.success) {
                        if (res.removed) {
                            $icon.removeClass('fas fa-heart glowing-heart').addClass('far fa-heart').attr('data-filled', 'false');
                        } else {
                            $icon.removeClass('far fa-heart').addClass('fas fa-heart glowing-heart').attr('data-filled', 'true');
                        }

                        Swal.fire({
                            icon: 'success',
                            title: 'Thông báo',
                            text: res.message,
                            timer: 1500,
                            showConfirmButton: false
                        });
                    } else {
                        Swal.fire({
                            icon: 'info',
                            title: 'Thông báo',
                            text: res.message
                        });
                    }
                }
            });
        });
    });
</script>

<script>
    $(document).ready(function () {
        $(".thumb-image").click(function () {
            var imgUrl = $(this).data("full");

            // Làm mờ ảnh trước
            $("#mainImage").addClass("fade-out");

            setTimeout(function () {
                // Đổi ảnh và hiển thị lại
                $("#mainImage").attr("src", imgUrl).removeClass("fade-out");

                // Kiểm tra ảnh có cần cắt không
                if ($(".thumb-image").index($(this)) > 0) {
                    $("#mainImage").addClass("crop-side");
                } else {
                    $("#mainImage").removeClass("crop-side");
                }
            }.bind(this), 200); // Delay để fade out xong rồi mới đổi
        });
    });
</script>

<script>
    function isMobileDevice() {
        return /Mobi|Android|iPhone|iPad/i.test(navigator.userAgent);
    }

    function handleCallClick() {
        if (isMobileDevice()) {
            document.getElementById("callLink").click();
        } else {
            navigator.clipboard.writeText("0334328540");
            Swal.fire({
                icon: "info",
                title: "Gọi điện từ máy tính",
                text: "Số điện thoại đã được sao chép: 0334328540. Vui lòng dùng Skype, Zoom hoặc điện thoại để gọi.",
                confirmButtonText: "Đã hiểu"
            });
        }
    }
</script>

<!-- Thêm script xử lý giỏ hàng sessionStorage -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Lấy thông tin sản phẩm hiện tại
        const currentProduct = {
            maHangHoa: '@Model.SelectedBienThe.MaHangHoa',
            maBienThe: '@Model.SelectedBienThe.MaBienThe',
            tenHangHoa: '@Model.Product.TenHangHoa',
            mauSac: '@Model.SelectedBienThe.MauSac',
            dungLuong: '@Model.SelectedBienThe.DungLuong',
            hinhAnh: '@(Model.SelectedBienThe.UrlAnh.FirstOrDefault())',
            giaBan: @Model.SelectedBienThe.GiaBan,
            giaKhuyenMai: @Model.SelectedBienThe.GiaKhuyenMai,
            soLuongTonKho: @Model.SelectedBienThe.SoLuongTonKho
        };

        // Kiểm tra người dùng đã đăng nhập chưa
        const isLoggedIn = @(Session["UserID"] != null ? "true" : "false");

        // Khởi tạo giỏ hàng từ sessionStorage nếu chưa có
        function initCart() {
            if (!sessionStorage.getItem('cart')) {
                sessionStorage.setItem('cart', JSON.stringify([]));
            }
            updateCartCount();
        }

        // Cập nhật số lượng hiển thị trên biểu tượng giỏ hàng
        function updateCartCount() {
            const cart = JSON.parse(sessionStorage.getItem('cart')) || [];
            const totalItems = cart.length;
            
            // Cập nhật số lượng ở biểu tượng giỏ hàng nếu có
            const cartCountElement = document.querySelector('.cart-count');
            if (cartCountElement) {
                cartCountElement.textContent = totalItems;
                cartCountElement.style.display = totalItems > 0 ? 'inline-block' : 'none';
            }
            
            // Kích hoạt sự kiện để thông báo cho các trang khác về thay đổi giỏ hàng
            window.dispatchEvent(new Event('cartUpdated'));
        }

        // Thêm sản phẩm vào giỏ hàng server (khi đã đăng nhập)
        function addToCartServer(product, quantity) {
            // Tạo dữ liệu gửi lên server
            const data = {
                maBienThe: product.maBienThe,
                soLuong: quantity,
                action: 'add'
            };

            // Gửi yêu cầu thêm sản phẩm lên server
            fetch('/InnerPage/UpdateCartItem', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    // Hiện thông báo thành công
                    Swal.fire({
                        icon: 'success',
                        title: 'Thành công!',
                        text: 'Đã thêm sản phẩm vào giỏ hàng',
                        timer: 1500,
                        showConfirmButton: false
                    });
                    
                    // Cập nhật hiển thị số lượng giỏ hàng
                    updateCartCountFromServer();
                } else {
                    // Hiện thông báo lỗi
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi!',
                        text: result.message || 'Không thể thêm sản phẩm vào giỏ hàng',
                        timer: 2000,
                        showConfirmButton: false
                    });
                }
            })
            .catch(error => {
                console.error("Lỗi khi thêm vào giỏ hàng:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi!',
                    text: 'Đã xảy ra lỗi khi thêm sản phẩm vào giỏ hàng',
                    timer: 2000,
                    showConfirmButton: false
                });
            });
        }

        // Cập nhật số lượng giỏ hàng từ server
        function updateCartCountFromServer() {
            fetch('/InnerPage/GetCartItems')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const totalItems = data.cartItems.length;
                        const cartCountElement = document.querySelector('.cart-count');
                        if (cartCountElement) {
                            cartCountElement.textContent = totalItems;
                            cartCountElement.style.display = totalItems > 0 ? 'inline-block' : 'none';
                        }
                    }
                })
                .catch(error => console.error('Lỗi khi lấy giỏ hàng:', error));
        }

        // Thêm sản phẩm vào giỏ hàng sessionStorage (khi chưa đăng nhập)
        function addToCartSession(product, quantity) {
            let cart = JSON.parse(sessionStorage.getItem('cart')) || [];
            
            // Kiểm tra sản phẩm đã có trong giỏ hàng chưa
            const existingItemIndex = cart.findIndex(item => item.maBienThe === product.maBienThe);
            
            if (existingItemIndex !== -1) {
                // Nếu đã có, tăng số lượng
                cart[existingItemIndex].soLuong += quantity;
            } else {
                // Nếu chưa có, thêm mới vào giỏ hàng
                cart.push({
                    maHangHoa: product.maHangHoa,
                    maBienThe: product.maBienThe, 
                    tenHangHoa: product.tenHangHoa,
                    mauSac: product.mauSac,
                    dungLuong: product.dungLuong,
                    hinhAnh: product.hinhAnh,
                    giaBan: product.giaBan,
                    giaKhuyenMai: product.giaKhuyenMai,
                    soLuong: quantity,
                    soLuongTonKho: product.soLuongTonKho
                });
            }
            
            // Lưu giỏ hàng vào sessionStorage
            sessionStorage.setItem('cart', JSON.stringify(cart));
            
            // Cập nhật số lượng trên UI
            updateCartCount();
            
            // Thông báo thành công
            Swal.fire({
                icon: 'success',
                title: 'Thành công!',
                text: 'Đã thêm sản phẩm vào giỏ hàng',
                timer: 1500,
                showConfirmButton: false
            });
        }

        // Thêm sản phẩm vào giỏ hàng - hàm chung
        function addToCart(product, quantity) {
            if (isLoggedIn) {
                // Nếu đã đăng nhập, thêm vào giỏ hàng server
                addToCartServer(product, quantity);
            } else {
                // Nếu chưa đăng nhập, thêm vào giỏ hàng session
                addToCartSession(product, quantity);
            }
        }

        // Khởi tạo giỏ hàng nếu chưa đăng nhập
        if (!isLoggedIn) {
            initCart();
        }

        // Xử lý sự kiện click nút "Thêm vào giỏ hàng"
        document.getElementById('btnAddToCart').addEventListener('click', function() {
            const quantity = parseInt(document.getElementById('quantity').textContent || 1);
            addToCart(currentProduct, quantity);
        });

        // Xử lý sự kiện click nút "Thêm giỏ hàng ngay bây giờ" (nếu có)
        const btnAddBundleToCart = document.getElementById('btnAddBundleToCart');
        if (btnAddBundleToCart) {
            btnAddBundleToCart.addEventListener('click', function() {
                addToCart(currentProduct, 1);
            });
        }
    });
</script>