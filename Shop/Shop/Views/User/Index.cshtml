@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model Shop.Models.UserViewModel
<link rel="stylesheet" href="~/assets/CSS/User/User.css" />
<div class="container p-4 bg-white my-3 rounded-3">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb small text-muted m-0">
            <li class="breadcrumb-item"><a href="/">Trang Chủ</a></li>
            <li class="breadcrumb-item"><a href="/pages">Pages</a></li>
            <li class="breadcrumb-item active text-secondary" aria-current="page">Hồ sơ</li>
            <li id="breadcrumb-current" class="breadcrumb-item active text-secondary" aria-current="page">
                Thông tin tài khoản
            </li>
        </ol>
    </nav>
</div>
<div class="container p-0">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }
</div>

<div class="container  min-vh-75 d-flex flex-column flex-md-row bg-white my-3 rounded-3 p-4 gap-5">
    <!-- Sidebar -->
    <div class="sidebar p-4 col-12 col-md-3 bg-light rounded-4">
        <div class="text-center mb-4">
            <div class="mb-3 mx-auto">
                <img src="https://png.pngtree.com/png-vector/20191027/ourmid/pngtree-user-icon-isolated-on-abstract-background-png-image_1875037.jpg" alt="Profile avatar" class="img-fluid rounded profile-img">
            </div>
            <h2 class="h4 fw-bold">@Model.KhachHang.HoTen</h2>
            <p class="text-muted">@Model.KhachHang.Email</p>
        </div>

        <nav>
            <div class="sidebar-menu overflow-auto" style="max-height:250px;">
                <ul class="nav flex-column gap-2">
                    <li class="nav-item">
                        <a href="#" class="nav-link active d-flex justify-content-between align-items-center rounded px-3 py-2" data-target="account-infor" data-title="Thông tin tài khoản">
                            <span><i class="fa-solid fa-user"></i> &nbsp; Thông tin tài khoản</span>
                            <i class="bi bi-arrow-right"></i>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-link d-flex justify-content-between align-items-center rounded px-3 py-2" data-target="my-order" data-title="Đơn hàng của tôi">
                            <span><i class="fa-solid fa-boxes-packing"></i> &nbsp; Đơn hàng của tôi</span>
                            <i class="bi bi-arrow-right"></i>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-link d-flex justify-content-between align-items-center rounded px-3 py-2" data-target="my-address" data-title="Địa chỉ nhận hàng">
                            <span><i class="fa-solid fa-truck-fast"></i>  &nbsp;Địa chỉ nhận hàng</span>
                            <i class="bi bi-arrow-right"></i>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-link d-flex justify-content-between align-items-center rounded px-3 py-2" data-target="change-password" data-title="Đổi mật khẩu">
                            <span><i class="fa-solid fa-rotate"></i>  &nbsp;Đổi mật khẩu</span>
                            <i class="bi bi-arrow-right"></i>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="nav-link d-flex justify-content-between align-items-center rounded px-3 py-2" data-target="Provide-feedback" data-title="Đổi mật khẩu">
                            <span><i class="fa-solid fa-comments"></i> &nbsp;Góp ý phản hồi</span>
                            <i class="bi bi-arrow-right"></i>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/Product/ProductWishList" class="text-decoration-none d-flex justify-content-between align-items-center rounded px-3 py-2" data-target="change-password" data-title="Đổi mật khẩu">
                            <span><i class="fa-solid fa-heart"></i>  &nbsp;Danh sách mặt hàng yêu thích</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" data-bs-toggle="modal" data-bs-target="#logoutModal"
                           class="text-decoration-none d-flex justify-content-between align-items-center rounded px-3 py-2">
                            <span><i class="fa-solid fa-arrow-right-from-bracket"></i> &nbsp;Thoát tài khoản</span>
                        </a>
                    </li>
                </ul>
            </div>
        </nav>
    </div>
    <style>
        .sidebar-menu::-webkit-scrollbar {
            width: 6px; /* Chiều rộng thanh cuộn dọc */
        }

        .sidebar-menu::-webkit-scrollbar-thumb {
            background-color: #ccc; /* Màu của "nút" cuộn */
            border-radius: 4px;
        }

        .sidebar-menu::-webkit-scrollbar-track {
            background-color: transparent; /* Màu nền của thanh cuộn */
        }
    </style>
    <!-- Main Content -->
    @*Account*@
    @using (Html.BeginForm("XacNhanDoiThongTin", "User", FormMethod.Post))
    {
        <div id="account-infor" class="flex-grow-1 p-4 tab-content">
            <h2 class="mb-4 fw-bold">THÔNG TIN TÀI KHOẢN</h2>
            <div class="container py-4" style="min-width: 720px;">
                <div class="mb-3">
                    <label for="firstName" class="form-label fw-medium">Họ tên </label>
                    <input type="text" class="form-control" name="HoTen" id="firstName" value="@Model.KhachHang.HoTen" required />
                </div>

                <div class="mb-3">
                    <label for="email" class="form-label fw-medium">Địa chỉ email </label>
                    <input type="email" class="form-control" name="Email" id="email" value="@Model.KhachHang.Email" required />
                </div>

                <div class="mb-4">
                    <label for="userPhone" class="form-label fw-medium">Số điện thoại</label>
                    <input type="tel" class="form-control" name="UserSoDienThoai" id="userPhone" value="@Model.KhachHang.SoDienThoai" />
                </div>


                <div class="mb-4">
                    <div class="g-recaptcha" data-sitekey="6LfycxgrAAAAAB4Lv3Q2NHNQxmml_eVVqnTQRa2P"></div>
                </div>

                <button type="button" class="btn btn-success text-white px-4 py-1 btn-save" onclick="checkRecaptchaAndShowModal()">
                    Xác nhận đổi thông tin tài khoản
                </button>

            </div>

            <!-- Modal xác nhận -->
            <div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Xác nhận</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                        </div>
                        <div class="modal-body">
                            Bạn có chắc chắn muốn cập nhật thông tin tài khoản?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                            <button type="submit" class="btn btn-primary">Xác nhận</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }


    <!-- Order items -->
    <div id="my-order" class="flex-grow-1 overflow-scroll-container tab-content d-none">
        <div class="flex-grow-1">
            <h3 class=" fw-bold mb-2 ">ĐƠN HÀNG CỦA TÔI</h3>
            <div class="item-order mb-4 px-3 rounded-4 py-2">
                <div class="text-end pb-2">
                    <span class="lbl-shipped fw-medium">Shipped</span>
                </div>
                <div class="d-flex justify-content-between align-items-start pb-2">
                    <div class="d-flex gap-3">
                        <div class="border rounded overflow-hidden" style="width:64px; height:64px;">
                            <img src="/placeholder.svg?height=64&width=64" alt="Product" class="img-fluid h-100 w-100 object-fit-cover">
                        </div>
                        <div>
                            <h5 class="fw-medium mb-1">Artisanal Avocado Oil Premium French Imported</h5>
                            <p class="text-muted small mb-0">Avocado oil 100ML *1</p>
                        </div>
                    </div>
                    <span class="fw-medium">$ 20.99</span>
                </div>

                <div class="d-flex justify-content-between align-items-start  pb-2 ">
                    <div class="d-flex gap-3">
                        <div class="border rounded overflow-hidden" style="width:64px; height:64px;">
                            <img src="/placeholder.svg?height=64&width=64" alt="Product" class="img-fluid h-100 w-100 object-fit-cover">
                        </div>
                        <div>
                            <h5 class="fw-medium mb-1">Artisanal</h5>
                            <p class="text-muted small mb-0">Avocado oil 100ML *1</p>
                        </div>
                    </div>
                    <span class="fw-medium">$ 20.99</span>
                </div>

                <div class="text-end text-muted small">
                    <p>Còn 2+ sản phẩm khác</p>
                </div>

                <div class="border-top pt-1 text-end">
                    <span class="h6 fw-medium me-2">Tổng tiền(4 sản phẩm):</span>
                    <span class="h4 fw-bold">$ 41.82</span>
                </div>
                <!-- Shipping notification -->
                <div class="bg-warning bg-opacity-25 rounded p-2 my-2">
                    <div class="d-flex align-items-center gap-2">
                        <div class="icon-shipped fw-bold">
                            <i class="fa-solid fa-truck-fast"></i> Shipped
                        </div>
                        <span>Đơn hàng đang vận chuyển</span>
                    </div>
                </div>
                <!-- Action buttons -->
                <div class="d-flex justify-content-end gap-2 ">
                    <button class="btn btn-dark">Refund</button>
                    <button class="btn btn-Confirm btn-success">Confirm</button>
                </div>
            </div>


            <div class="item-order mb-4 px-3 rounded-4 py-2">
                <div class="text-end pb-2">
                    <span class="text-danger fw-medium">Closed</span>
                </div>
                <div class="d-flex justify-content-between align-items-start pb-2">
                    <div class="d-flex gap-3">
                        <div class="border rounded overflow-hidden" style="width:64px; height:64px;">
                            <img src="/placeholder.svg?height=64&width=64" alt="Product" class="img-fluid h-100 w-100 object-fit-cover">
                        </div>
                        <div>
                            <h5 class="fw-medium mb-1">Artisanal Avocado Oil Premium French Imported</h5>
                            <p class="text-muted small mb-0">Avocado oil 100ML *1</p>
                        </div>
                    </div>
                    <span class="fw-medium">$ 20.99</span>
                </div>

                <div class="d-flex justify-content-between align-items-start  pb-2 ">
                    <div class="d-flex gap-3">
                        <div class="border rounded overflow-hidden" style="width:64px; height:64px;">
                            <img src="/placeholder.svg?height=64&width=64" alt="Product" class="img-fluid h-100 w-100 object-fit-cover">
                        </div>
                        <div>
                            <h5 class="fw-medium mb-1">Artisanal</h5>
                            <p class="text-muted small mb-0">Avocado oil 100ML *1</p>
                        </div>
                    </div>
                    <span class="fw-medium">$ 20.99</span>
                </div>

                <div class="text-end text-muted small">
                    <p>Còn 2+ sản phẩm khác</p>
                </div>

                <div class="border-top pt-1 text-end">
                    <span class="h6 fw-medium me-2">Tổng tiền(4 sản phẩm):</span>
                    <span class="h4 fw-bold">$ 41.82</span>
                </div>

                <!-- Order confirmation -->
                <div class="bg-success bg-opacity-25 rounded p-2 my-2">
                    <div class="d-flex align-items-center gap-2">
                        <div class="icon-check fw-bold">
                            <i class="bi bi-check-circle-fill"></i> Signed
                        </div>
                        <span> Your order has been received and signed...</span>
                    </div>
                </div>

                <!-- Buy again button -->
                <div class="text-end 2">
                    <button class="btn btn-buyagain btn-success">Buy Again</button>
                </div>
            </div>
        </div>
    </div>


    <!-- My address -->
    <div id="my-address" class=" flex-grow-1 p-3 tab-content  d-none">
        <h3 class="mb-2 fw-bold">ĐIA CHỈ VẬN CHUYỂN</h3>
        @foreach (var product in Model.ListDiaChiKhachHangs)
        {
            <div class="p-3 mb-4 rounded-4 bg-light">
                <div class="d-flex align-items-center mb-3">
                    <input type="radio" name="address"
                           id="home_@product.MaDiaChi"
                           class="radio-indicator"
                           value="@product.MaDiaChi"
                           @(product.LaMacDinh == true ? "checked" : "")
                           onchange="setMacDinh('@product.MaDiaChi')">

                    <label for="home_@product.MaDiaChi" class="circle-indicator-label me-3"></label>
                    <h5 class="mb-0 me-3">@product.DiaChiDayDu</h5>
                    <span class="badge">HOME</span>
                </div>
                <div class="ps-5 d-flex justify-content-between">
                    <div>
                        <p class="mb-1 text-dark">@product.DiaChiDayDu</p>
                        <p class="text-muted">
                            <i class="fa-solid fa-user"></i><span> @product.TenNguoiNhan</span>
                            &emsp;<i class="fa-solid fa-phone"></i> @product.SoDienThoai
                        </p>
                    </div>
                    <div class="d-flex justify-content-end gap-2 mt-2">
                        <button class="btn btn-light px-3 py-2 delete-btn" data-id="@product.MaDiaChi" title="Xóa">
                            <i class="bi bi-x fs-5"></i> <!-- fs-5 tăng size icon -->
                        </button>
                    </div>

                </div>
            </div>
        }



        <!-- Add New Address -->
        <button id="btn-add-address" class="w-100 btn border border-2 border-dashed text-muted d-flex align-items-center justify-content-center py-3">
            <i class="bi bi-plus-circle me-2"></i> Thêm địa chỉ nhận hàng
        </button>


        <div id="new-address-form" class="form-container d-none animate__animated">
            <button type="button" class="btn-close position-absolute top-0 end-0 m-3" aria-label="Đóng" onclick="closeAddressForm()"></button>
            <h2 class="mb-4 text-center">Thêm Địa Chỉ Nhận Hàng</h2>
            <form id="address-form">
                <div class="row g-3">
                    <!-- Họ và tên -->
                    <div class="col-md-6">
                        <label for="fullName" class="form-label">Họ và tên <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="fullName" name="TenNguoiNhan"
                               placeholder="Nhập họ và tên" required
                               pattern="[A-Za-zÀ-ỹ\s]+" title="Họ và tên chỉ được nhập chữ và khoảng trắng">
                    </div>
                    <!-- Số điện thoại -->
                    <div class="col-md-6">
                        <label for="phone" class="form-label">Số điện thoại <span class="text-danger">*</span></label>
                        <input type="tel" class="form-control" id="phone" name="SoDienThoai"
                               placeholder="Số điện thoại" required inputmode="tel"
                               pattern="^\d{10,15}$" title="Số điện thoại phải là một chuỗi gồm từ 10 đến 15 chữ số">
                    </div>
                </div>
                <!-- Địa chỉ -->
                <div class="mb-3">
                    <label for="address" class="form-label">Địa chỉ nhận hàng <span class="text-danger">*</span></label>
                    <input type="text" class="form-control" id="address" name="DiaChiDayDu"
                           placeholder="Số nhà, đường" required>
                </div>

                <div class="mb-3">
                    <label for="province-select" class="form-label">Tỉnh thành (1)<span class="text-danger">*</span></label>
                    <select class="form-select w-100" id="province-select" name="Tinh" required>
                        <option value="">-- Chọn tỉnh --</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="district-select" class="form-label">Quận/huyện (2)<span class="text-danger">*</span></label>
                    <select class="form-select" id="district-select" name="QuanHuyen" required disabled>
                        <option value="">-- Chọn quận/huyện --</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="ward-select" class="form-label">Phường/xã (3)<span class="text-danger">*</span></label>
                    <select class="form-select" id="ward-select" name="PhuongXa" required disabled>
                        <option value="">-- Chọn phường/xã --</option>
                    </select>
                </div>
                <!-- Nút lưu -->
                <button type="submit" class="btn btn-success mt-3 w-100">Lưu địa chỉ</button>
            </form>
        </div>
    </div>



    <style>
        .password-wrapper {
            position: relative;
        }

            .password-wrapper input {
                padding-right: 40px; /* Chừa khoảng trống bên phải cho icon */
            }

            .password-wrapper button {
                position: absolute;
                top: 50%;
                right: 10px;
                transform: translateY(-50%);
                background: none;
                border: none;
                color: #6c757d;
                cursor: pointer;
            }

                .password-wrapper button:focus {
                    outline: none;
                    box-shadow: none;
                }

        a.text-muted:hover {
            color: rgb(26, 186, 26) !important; /* Màu xanh Bootstrap */
        }


        /* Độ mạnh mật khẩu */
        .strength-meter {
            margin-top: 10px;
            height: 8px;
            width: 100%;
            border-radius: 4px;
            background-color: #e0e0e0;
            transition: background-color 0.3s ease; /* Transition cho background */
        }

            .strength-meter span {
                display: block;
                height: 100%;
                border-radius: 4px;
                width: 0%;
                transition: width 0.3s ease; /* Transition cho width */
            }

            .strength-meter .weak {
                background-color: red;
            }

            .strength-meter .medium {
                background-color: orange;
            }

            .strength-meter .strong {
                background-color: green;
            }

        #password-strength-text {
            margin-top: 10px;
            transition: color 0.3s ease; /* Transition cho color của văn bản */
        }
    </style>

    <!-- Change password -->
    <div id="change-password" class="flex-grow-1 p-4 tab-content d-none">
        <h3 class="mb-2 fw-bold">ĐỔI MẬT KHẨU</h3>
        <form style="max-width: 720px;" method="POST" action="/User/ChangePassword" onsubmit="return validateRecaptcha();">
            <div class="mb-3">
                <label for="password" class="form-label">Mật khẩu <span class="text-danger">*</span></label>
                <div class="password-wrapper">
                    <input type="password"
                           name="password"
                           class="form-control"
                           id="password"
                           placeholder="Nhập mật khẩu hiện tại"
                           required
                           minlength="8"
                           maxlength="20"
                           pattern=".{8,20}"
                           title="Mật khẩu phải từ 8–20 ký tự"
                           oninput="checkPasswordStrength()" />
                    <button type="button" onclick="togglePassword(this)">
                        <i class="fa-solid fa-eye"></i>
                    </button>
                </div>
                <div id="password-strength-text" style="margin-top: 10px;"></div>
                <div class="strength-meter" id="strengthMeter"><span></span></div>
            </div>

            <div class="mb-3">
                <label for="password_new" class="form-label">Nhập mật khẩu mới <span class="text-danger">*</span></label>
                <div class="password-wrapper">
                    <input type="password"
                           name="password_new"
                           class="form-control"
                           id="password_new"
                           placeholder="Nhập mật khẩu mới tại đây"
                           required
                           minlength="8"
                           maxlength="20"
                           pattern=".{8,20}"
                           title="Mật khẩu phải từ 8–20 ký tự"
                           oninput="checkPasswordMatch_1()" />
                    <button type="button" onclick="togglePassword(this)">
                        <i class="fa-solid fa-eye"></i>
                    </button>
                </div>
                <div id="password-match-error" style="color: red; font-size: 0.9em; margin-top: 5px;"></div>
            </div>

            <div class="mb-3">
                <label for="password_new_confirm" class="form-label">Xác nhận mật khẩu mới <span class="text-danger">*</span></label>
                <div class="password-wrapper">
                    <input type="password"
                           name="password_new_confirm"
                           class="form-control"
                           id="password_new_confirm"
                           placeholder="Xác nhận mật khẩu tại đây"
                           required
                           minlength="8"
                           maxlength="20"
                           pattern=".{8,20}"
                           title="Mật khẩu phải từ 8–20 ký tự"
                           oninput="checkPasswordMatch()" />
                    <button type="button" onclick="togglePassword(this)">
                        <i class="fa-solid fa-eye"></i>
                    </button>
                </div>
            </div>
            <div class="g-recaptcha mb-3" data-sitekey="6LfycxgrAAAAAB4Lv3Q2NHNQxmml_eVVqnTQRa2P"></div>
            <div id="recaptcha-error" style="color: red; font-size: 0.9em; margin-bottom: 5px;"></div>
            <button type="submit" class="btn btn-success text-white px-4 py-2 btn-changepassword">Xác nhận đổi mật khẩu</button>
        </form>
    </div>


    <!-- Change password -->
    <div id="Provide-feedback" class="flex-grow-1 p-4 tab-content d-none">
        <h3 class="mb-2 fw-bold">GÓP Ý PHẢN HỒI</h3>
        <div class="d-flex p-4">
            <img src="https://bvndtp.org.vn/wp-content/uploads/2021/10/cam-on-2.jpg" width="300" height="300">
            <div class="align-content-center">
                <span>Mời bạn đánh giá mức độ hài lòng về chương trình ưu đãi, và dịch vụ hỗ trợ của SwooTechsmart. Hãy cho chúng mình thêm góp ý để cải thiện tốt hơn</span>
            </div>

        </div>
        <iframe src="https://docs.google.com/forms/d/e/1FAIpQLSexiy2-lbymp7uApW2ZfDcct9ZA0ptWTF9D3GUEKdEAPAF7xQ/viewform?embedded=true"
                width="840"
                height="400"
                frameborder="0"
                marginheight="0"
                marginwidth="0"
                scrolling="yes">
            Đang tải…
        </iframe>
    </div>
</div>

@*Xác nhận thoát tài khoản*@
<div class="modal fade" id="logoutModal" tabindex="-1" aria-labelledby="logoutModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="logoutModalLabel">Xác nhận đăng xuất </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn thoát tài khoản không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <a href="/InnerPage/Logout" class="btn btn-danger">Đăng xuất &nbsp;<i class="fa-solid fa-arrow-right-from-bracket"></i></a>
            </div>
        </div>
    </div>
</div>


<script src="https://www.google.com/recaptcha/api.js" async defer></script>
<script>
    function checkPasswordMatch_1() {
        const oldPassword = document.getElementById('password').value;
        const newPassword = document.getElementById('password_new').value;
        const errorDiv = document.getElementById('password-match-error');
        const newPasswordInput = document.getElementById('password_new');

        if (newPassword && newPassword === oldPassword) {
            errorDiv.textContent = "Mật khẩu mới không được trùng với mật khẩu cũ.";
            newPasswordInput.setCustomValidity('Mật khẩu mới không được trùng với mật khẩu cũ.');
        } else {
            errorDiv.textContent = "";
            newPasswordInput.setCustomValidity('');
        }
    }
    function checkPasswordMatch() {
        const password = document.getElementById('password_new').value;
        const confirmPassword = document.getElementById('password_new_confirm').value;
        const confirmInput = document.getElementById('password_new_confirm');

        if (confirmPassword && password !== confirmPassword) {
            confirmInput.setCustomValidity('Mật khẩu xác nhận không khớp');
        } else {
            confirmInput.setCustomValidity('');
        }
    }
    // Xử lý không phải robot
    function validateRecaptcha() {
        const response = grecaptcha.getResponse();
        const errorDiv = document.getElementById('recaptcha-error');

        if (response.length === 0) {
            errorDiv.textContent = "Vui lòng xác minh rằng bạn không phải là robot.";
            return false;
        } else {
            errorDiv.textContent = ""; // Xóa lỗi nếu đã tick
            return true;
        }
    }


    const navLinks = document.querySelectorAll('.nav-link');
    const breadcrumb = document.getElementById('breadcrumb-current');

    navLinks.forEach(link => {
        link.addEventListener('click', function (e) {
            e.preventDefault();

            // Lấy tiêu đề mới từ data-title
            const newTitle = this.getAttribute('data-title');
            if (breadcrumb && newTitle) {
                breadcrumb.textContent = newTitle;
            }

            // Ẩn tất cả các tab content
            const targets = document.querySelectorAll('.tab-content');
            targets.forEach(el => el.classList.add('d-none'));

            // Hiển thị tab tương ứng
            const targetId = this.getAttribute('data-target');
            const targetEl = document.getElementById(targetId);
            if (targetEl) {
                targetEl.classList.remove('d-none');
            }

            // Đổi class active cho link
            navLinks.forEach(nav => nav.classList.remove('active'));
            this.classList.add('active');
        });
    });

    document.getElementById('btn-add-address').addEventListener('click', function () {
        const form = document.getElementById('new-address-form');

        // Nếu chưa có overlay thì thêm
        if (!document.querySelector('.form-overlay')) {
            const overlay = document.createElement('div');
            overlay.classList.add('form-overlay');
            overlay.addEventListener('click', () => {
                form.classList.add('d-none');
                overlay.remove();
            });
            document.body.appendChild(overlay);
        }

        form.classList.remove('d-none');
    });
    function togglePassword(button) {
        const passwordInput = button.previousElementSibling;
        const icon = button.querySelector("i");

        if (passwordInput.type === "password") {
            passwordInput.type = "text";
            icon.classList.remove("fa-eye");
            icon.classList.add("fa-eye-slash");
        } else {
            passwordInput.type = "password";
            icon.classList.remove("fa-eye-slash");
            icon.classList.add("fa-eye");
        }
    }
    function checkPasswordStrength() {
        const password = document.getElementById('password').value;
        const meter = document.getElementById('strengthMeter');
        const meterSpan = meter.querySelector('span');
        const strengthText = document.getElementById('password-strength-text');

        // Nếu mật khẩu rỗng, không làm gì (ẩn thanh độ mạnh và văn bản)
        if (password === "") {
            meterSpan.className = '';
            meterSpan.style.width = '0%';
            strengthText.textContent = '';
            return;
        }

        // Kiểm tra độ mạnh mật khẩu
        let strength = 0;

        if (password.length >= 8) strength += 1;
        if (/[A-Z]/.test(password)) strength += 1;
        if (/[a-z]/.test(password)) strength += 1;
        if (/\d/.test(password)) strength += 1;
        if (/[\W_]/.test(password)) strength += 1;

        // Cập nhật thanh độ mạnh và văn bản mô tả độ mạnh
        if (strength <= 2) {
            meterSpan.className = 'weak';
            meterSpan.style.width = '33%';
            strengthText.textContent = 'Yếu';
            strengthText.style.color = 'red';
        } else if (strength === 3 || strength === 4) {
            meterSpan.className = 'medium';
            meterSpan.style.width = '66%';
            strengthText.textContent = 'Trung bình';
            strengthText.style.color = 'orange';
        } else if (strength === 5) {
            meterSpan.className = 'strong';
            meterSpan.style.width = '100%';
            strengthText.textContent = 'Mạnh';
            strengthText.style.color = 'green';
        }
    }
</script>
<script>
    function checkRecaptchaAndShowModal() {
        var response = grecaptcha.getResponse();
        if (response.length === 0) {
            alert("Vui lòng xác thực bạn không phải là robot.");
        } else {
            // Nếu đã xác thực, mở modal
            var confirmModal = new bootstrap.Modal(document.getElementById('confirmModal'));
            confirmModal.show();
        }
    }
</script>
<script>
    function setMacDinh(maDiaChi) {
        fetch('/User/CapNhatDiaChiMacDinh', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ maDiaChi: maDiaChi })
        }).then(res => {
            if (res.ok) {
                Swal.fire({
                    icon: 'success',
                    title: 'Thành công',
                    text: 'Đã cập nhật địa chỉ mặc định!',
                    timer: 1500,
                    showConfirmButton: false
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi',
                    text: 'Không thể cập nhật địa chỉ mặc định.'
                });
            }
        }).catch(err => {
            Swal.fire({
                icon: 'error',
                title: 'Lỗi kết nối',
                text: 'Không thể kết nối đến máy chủ.'
            });
        });
    }
</script>

<script>
    function closeAddressForm() {
        const form = document.getElementById('new-address-form');
        const overlay = document.querySelector('.form-overlay');

        form.classList.add('animate__fadeOut');

        setTimeout(() => {
            form.classList.add('d-none');
            form.classList.remove('animate__fadeOut');
            if (overlay) overlay.remove();
        }, 300); // thời gian trùng với hiệu ứng animate.css (nếu dùng)
    }



    document.addEventListener('DOMContentLoaded', () => {
        const provinceSelect = document.getElementById('province-select');
        const districtSelect = document.getElementById('district-select');
        const wardSelect = document.getElementById('ward-select');

        // Load danh sách tỉnh
        fetch("https://provinces.open-api.vn/api/?depth=1")
            .then(res => res.json())
            .then(provinces => {
                provinces.forEach(province => {
                    provinceSelect.innerHTML += `<option value="${province.code}">${province.name}</option>`;
                });
            });

        // Khi chọn tỉnh
        provinceSelect.addEventListener('change', function () {
            const provinceCode = this.value;
            districtSelect.innerHTML = '<option value="">-- Chọn quận/huyện --</option>';
            wardSelect.innerHTML = '<option value="">-- Chọn phường/xã --</option>';
            wardSelect.disabled = true;

            if (provinceCode) {
                fetch(`https://provinces.open-api.vn/api/p/${provinceCode}?depth=2`)
                    .then(res => res.json())
                    .then(data => {
                        districtSelect.disabled = false;
                        data.districts.forEach(d => {
                            districtSelect.innerHTML += `<option value="${d.code}">${d.name}</option>`;
                        });
                    });
            } else {
                districtSelect.disabled = true;
                wardSelect.disabled = true;
            }
        });

        // Khi chọn quận
        districtSelect.addEventListener('change', function () {
            const districtCode = this.value;
            wardSelect.innerHTML = '<option value="">-- Chọn phường/xã --</option>';

            if (districtCode) {
                fetch(`https://provinces.open-api.vn/api/d/${districtCode}?depth=2`)
                    .then(res => res.json())
                    .then(data => {
                        wardSelect.disabled = false;
                        data.wards.forEach(w => {
                            wardSelect.innerHTML += `<option value="${w.code}">${w.name}</option>`;
                        });
                    });
            } else {
                wardSelect.disabled = true;
            }
        });
    });

</script>
<script>
    // Kiểm tra khi form được submit
    document.querySelector('#address-form').addEventListener('submit', function (e) {
        e.preventDefault();

        const fullName = document.getElementById('fullName').value;
        const phone = document.getElementById('phone').value;

        // Kiểm tra họ và tên (chỉ cho phép nhập chữ)
        const nameRegex = /^[A-Za-zÀ-ỹ\s]+$/;
        if (!nameRegex.test(fullName)) {
            Swal.fire('Lỗi!', 'Họ và tên chỉ được nhập chữ!', 'error');
            return;
        }

        // Kiểm tra số điện thoại (chỉ cho phép nhập số)
        const phoneRegex = /^[0-9]+$/;
        if (!phoneRegex.test(phone)) {
            Swal.fire('Lỗi!', 'Số điện thoại chỉ được nhập số!', 'error');
            return;
        }

        // Tiến hành xử lý lưu thông tin tại đây (ví dụ gửi AJAX)
    });

</script>
<script>
    document.querySelector('#address-form').addEventListener('submit', function (e) {
        e.preventDefault();  // Ngừng hành động mặc định của form submit

        // Lấy giá trị từ các trường trong form
        const fullName = document.getElementById('fullName').value;
        const phone = document.getElementById('phone').value;
        const address = document.getElementById('address').value;
        const province = document.getElementById('province-select').selectedOptions[0]?.text || '';
        const district = document.getElementById('district-select').selectedOptions[0]?.text || '';
        const ward = document.getElementById('ward-select').selectedOptions[0]?.text || '';

        // Tạo địa chỉ đầy đủ
        const fullAddress = `${address}, ${ward}, ${district}, ${province}`;

        // Gửi dữ liệu đến API
        fetch('/User/LuuDiaChiMoi', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                TenNguoiNhan: fullName,
                SoDienThoai: phone,
                DiaChiDayDu: fullAddress
            })
        })
            .then(res => res.json())  // Chuyển phản hồi từ server thành JSON
            .then(data => {
                if (data.success) {
                    // Thông báo thành công và tải lại trang sau khi thêm địa chỉ thành công
                    Swal.fire('Thành công!', 'Địa chỉ đã được thêm.', 'success').then(() => {
                        location.reload();  // Tải lại trang
                    });
                } else {
                    // Thông báo lỗi khi có sự cố
                    Swal.fire('Lỗi!', data.message || 'Thêm địa chỉ thất bại.', 'error');
                }
            })
            .catch(error => {
                // Thông báo nếu có lỗi xảy ra trong quá trình gửi dữ liệu
                Swal.fire('Lỗi!', 'Không thể gửi dữ liệu đến server.', 'error');
                console.error(error);  // In ra lỗi trong console
            });
    });

    document.querySelectorAll('.delete-btn').forEach(button => {
        button.addEventListener('click', function () {
            const addressId = this.getAttribute('data-id'); // Lấy ID địa chỉ từ thuộc tính data-id

            // Gửi yêu cầu xóa địa chỉ
            fetch(`/User/XoaDiaChi/${addressId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        // Nếu xóa thành công, xóa địa chỉ khỏi DOM
                        const addressItem = this.closest('.p-3.mb-4');
                        addressItem.remove();  // Xóa địa chỉ khỏi giao diện
                        Swal.fire('Thành công!', 'Địa chỉ đã được xóa.', 'success');
                    } else {
                        Swal.fire('Lỗi!', data.message || 'Không thể xóa địa chỉ.', 'error');
                    }
                })
                .catch(error => {
                    Swal.fire('Lỗi!', 'Có lỗi xảy ra khi xóa địa chỉ.', 'error');
                    console.error(error);
                });
        });
    });
</script>

